name: Odoo CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: your-dockerhub-username/odoo-app-chtouki
  DOCKER_TAG: latest

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for proper permission handling

    - name: Fix script permissions
      run: |
        chmod +x entrypoint.sh wait-for-psql.py
        git update-index --chmod=+x entrypoint.sh
        git update-index --chmod=+x wait-for-psql.py
        ls -la  # Verify permissions

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and Test
      run: |
        docker build \
          --no-cache \
          -t $DOCKER_IMAGE:$DOCKER_TAG \
          --build-arg ODOO_RELEASE=$(date +%Y%m%d) \
          .
        
        docker run --rm $DOCKER_IMAGE:$DOCKER_TAG \
          python3 -c "import odoo; print('Odoo test successful')"

    - name: Push to Docker Hub
      run: |
        docker push $DOCKER_IMAGE:$DOCKER_TAG

  deploy-to-ec2:
    needs: build-test-push
    runs-on: ubuntu-latest
    steps:
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.EC2_SSH_KEY }}
        known_hosts: "optional"

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
        # Pull latest image
        docker pull $DOCKER_IMAGE:$DOCKER_TAG

        # Stop and recreate containers
        cd ~/odoo-project
        docker-compose down
        docker-compose up -d --remove-orphans

        # Verify deployment
        sleep 10
        curl -sSf http://localhost:8069 > /dev/null || exit 1
        echo "Deployment successful!"
        EOF
